{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}

{% set resengoID = content.field_id_resengo.0["#context"].value %}
{% set resengoVoucher = content.field_id_voucher_resengo.0["#context"].value %}

{% if content.field_id_resengo|render is not empty and content.field_id_voucher_resengo|render is not empty %}
  {% set bookingColClasses = 'col-sm-6' %}
  {% set bgClass = 'bg--primary' %}
{% else %}
  {% set bookingColClasses = 'col-sm-12' %}
{% endif %}

{% if content.field_id_resengo|render is not empty or content.field_id_voucher_resengo|render is not empty %}
  {% set bgClass = 'bg--primary' %}
{% endif %}

{% if content.field_id_resengo|render is empty and content.field_id_voucher_resengo|render is empty %}
  {% set bgClass = 'bg--white' %}
{% endif %}

<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {{ title_suffix }}
  <div class="infos">
    <div class="infos__item">
      <h2 class="center">{{ 'Opening hours'|t }}</h2>
      {{ content.field_opening_hours }}
    </div>
    <div class="infos__item">
      <h2 class="center">{{ 'Contact details'|t }}</h2>
      <p>{{ content.field_address }}</p>
      <p>{{ content.field_phone }}</p>
    </div>
    <div class="infos__item">
      <a href="{{ path('entity.node.canonical', {'node': 8}) }}" class="btn btn-link">{{ 'See our exclusive offers'|t }}</a>
    </div>
  </div>

  <section id="meals" class="c-paragraph">
    {{ content.field_meals }}
  </section>

  <section id="booking" class="c-paragraph {{ bgClass }}">
    <div class="container">
      <div class="row">
        <div class="col-sm-12 col-md-10 col-md-offset-1">
          {% if content.field_id_resengo|render is not empty or content.field_id_voucher_resengo|render is not empty %}
          <div class="row">
            <div class="col-sm-12">
              <h2 class="text-center">{{ 'Book now'|t }}</h2>
            </div>
          </div>
          {% endif %}
          <div class="row">
            {% if content.field_id_resengo|render is not empty %}
            <div {{ attributes.addClass(bookingColClasses) }}>
              <div id="resengo_booknow">
                <script type="text/javascript" src="https://www.resengo.com/WID/Widget/Cors"></script>
                <script>
                  bookNow({
                    companyID: '{{ resengoID }}',
                    target: '#resengo_booknow',
                    language: '{{ language }}'
                  });
                </script>
              </div>
            </div>
            {% endif %}
            {% if content.field_id_voucher_resengo|render is not empty %}
            <div {{ attributes.addClass(bookingColClasses) }}>
              <div id="resengo_voucher">
                <iframe
                  src="//www.resengo.com/Code/Webshop/WS_Shop.asp?CID=2183&SCID={{ resengoVoucher }}&AID=1&LC={{ language }}"
                  ALLOWTRANSPARENCY="TRUE" style="background:transparent;" height="500" width="100%" frameborder="0"
                  scrolling="yes" marginheight="0" marginwidth="0" align="bottom" id="ResengoFrame" name="ResengoFrame">
                  No Frames
                </iframe>
                <script>
                  window.addEventListener("message", function (e) {
                      if (e.data[0] === "setResengoFrameHeight") {
                        document.getElementById("ResengoFrame").style.height = e.data[1] + "px"
                      }
                    },
                    false)
                </script>
              </div>
            </div>
            {% endif %}

            {% if content.field_id_resengo|render is empty and content.field_id_voucher_resengo|render is empty %}
            <div class="col-sm-8 col-sm-offset-2 text-center">
              {{ content.field_button }}
            </div>
            {% endif %}
          </div>

          {% if content.field_phone is not empty %}
            <div class="row">
              <div class="col-sm-12">
                <div class="booking__phone text-center">
                  <p>{{ content.field_phone }}</p>
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </section>

  <div{{ content_attributes.addClass('content') }}>
    {{ content|without('body','field_buttons', 'field_media_image', 'field_video', 'field_opening_hours', 'field_phone', 'field_address', 'field_meals', 'field_id_resengo', 'field_id_voucher_resengo', 'field_button', 'field_horeca_category') }}
  </div>

</div>
