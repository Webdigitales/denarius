{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'c-paragraph',
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'c-paragraph-testimonial'
] %}
{% block paragraph %}
  <div id="paragraph_{{ paragraph.id() }}" {{ attributes.addClass(classes) }}>
    <div class="container">
      <div class="row">
        <div class="col-sm-6 col-md-6 paragraph__image" data-aos="image-effect">
          <div class="c-image-mask mask--to-right"></div>
          {{ content.field_media_image }}
          <svg width="500px" height="430px">
            <defs>
              <clipPath id="testimonial_clip">
                <path d="M235.660363,428.399483 C343.141747,445.834417 515,327.488199 515,205.971994 C515,84.455788 317.969677,20.1600614 246.296542,7.84774522 C180.917018,-3.38342778 82.7583844,-7.42888271 40.8503561,31.622655 C-1.05767216,70.6741928 17.3388035,150.497204 31.3337753,205.971994 C58.2559809,312.689157 128.17898,410.964549 235.660363,428.399483 Z"></path>
              </clipPath>
            </defs>
          </svg>
        </div>
        <div class="col-sm-6 col-md-4 col-md-offset-1 paragraph__body" data-aos="fade-up">
          <blockquote>
            <p>{{ content.field_quote|field_value }}</p>
            <footer>
              <cite>{{ content.field_author|field_value }}</cite>
            </footer>
          </blockquote>
          {{ content|without('field_media_image', 'field_tag', 'field_quote', 'field_author') }}
        </div>
      </div>
    </div>
  </div>
{% endblock paragraph %}
